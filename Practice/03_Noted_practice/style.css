
/* resets the page and makes it easier to start styling */
/*  we delete the default styles given by client */
* {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}
/* here we call border box which includes border and padding into the width 
making it more logical when styling since the width is the width */
body {
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
}
 
/* here we are setting the font weight on our h elements */ 

h1, h2, h3, h4, h5, h6 {
  font-weight: 500;
}

/* images by defaul are inline so here we set it to block and tell it 
to take up all of the space the parent container element has */

img {
  display: block;
  max-width: 100%;
}

/* here we set the overall basic font size to 10px using math so that all
of our rems sizes are essentially multiples of 10 */
html {
  /* 16px (16 * .625 = 10) */
  font-size: 62.5%;
}


/* Main Dashboard Layout */
/* here we set the dashboared's size and we say make it as big as the window is 
then we call flex which changes the alignment behaviour of its children elements */

.dashboard {
  height: 100vh;
  display: flex;
}


/* here we start styling the nav we call flex to once again change the behaviour
of its children , then we tell these children to align in a column. space between then
pushes these elements as far as one another as then can within the container theyre in */
.dashboard__nav {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 6.4rem 0;
  /* this is the devider line on the right */
  border-right: 1px solid #ccc;
  /* then we declare a size variable which we will use later */
  --x-spacing: 3.6rem;
}

/* this selects all children execept the last child and gives them margin bottom */
.dashboard__nav > *:not(:last-child) {
  margin-bottom: 6.4rem;
}

/* here we select the side bar and the nav then set's their min width */
.dashboard__nav, .dashboard__sidebar {
  min-width: 12rem;
}



/* Nav Section */

/* these are the 4 dots at the top of the page */
/* this is the container that is going to hold our little 4 dots that move around */
.dashboard__branding {
  height: 4.8rem;
  width: 4.8rem;
  position: relative;
  margin-left: var(--x-spacing);

  --x: 0;
  --y: 0;
}

/* here we declare a span and make it display as a block. 
This will be all of the dots the way they look individually*/
.dashboard__branding span {
  display: block;
  height: 16%;
  width: 16%;
  border-radius: 50%;
  background-color: black;
  position: absolute;
  /* chad css main anim code */
  transition: top 0.2s, left 0.2s, right 0.2s, bottom 0.2s;
}
/* This is the amount of space the spans will move when hovered */
.dashboard__branding:hover {
  --y: 1rem;
  --x: 1rem;
}

/* here we position our spans so they make a square */
.dashboard__branding span:first-child {
  top: var(--y);
  left: var(--x);
}

.dashboard__branding span:nth-child(2) {
  top: var(--y);
  right: var(--x);
}

.dashboard__branding span:nth-child(3) {
  bottom: var(--y);
  right: var(--x);
}

.dashboard__branding span:nth-child(4) {
  bottom: var(--y);
  left: var(--x);
}

/* we remove the ugly default styling and we use flex grow to make them take up 
all of the available space in their parent container */
.dashboard__links {
  list-style: none;
  flex-grow: 10;
}

/* for all links that arent the last give them some margin */
.dashboard__link:not(:last-child) {
  margin-bottom: 1.2rem;
}

/* we select all of the a elemets in our dashboard link container and 
give them a display of flex follwed by an align center to center them 
we all remove the default styling and add our own */
.dashboard__link a {
  display: flex;
  align-items: center;
  text-decoration: none;
  color: black;
}
/* here we are just sizing svgs so they are uniform */ 
.dashboard__link svg {
  height: 2.4rem;
  width: 2.4rem;
  margin-right: 1.6rem;
}

/* here we size our h6 in our dashboard link */ 
.dashboard__link h6 {
  font-size: 1.8rem;
  font-weight: 400;
}
/* this is the left border than shows which a element is active */
.dashboard__link.active {
  border-left: 4px solid black;
}
/* here we set the padding based on two bits of math remember rems ;) */
.dashboard__link {
  padding: .8rem var(--x-spacing);
}
/* this is the pfp at the bottom same stuff ive commented above for logic */
.dashboard__user {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.dashboard__user h5 {
  font-size: 2rem;
  font-weight: 500;
}

/* this is the gray out line around the pfp */
.dashboard__user div {
  height: 6.4rem;
  width: 6.4rem;
  padding: 0.8rem;
  border: 1px solid #ccc;
  border-radius: 1.2rem;
  position: relative;
  margin-bottom: 0.8rem;
}

.dashboard__user img {
  border-radius: 1rem;
}
/* this is the green dot on the pfp */
.dashboard__user div span {
  display: block;
  height: 1.6rem;
  width: 1.6rem;
  background-color: rgb(135, 224, 135);
  border-radius: 50%;
  border: 2px solid white;

  position: absolute;
  right: -0.8rem;
  bottom: 0;
}


/* Main Section */

/* flex grow makes it big as big as it can be */
.dashboard__body {
  display: flex;
  flex-grow: 10;
}


.dashboard__main {
  padding: 4.8rem;
  flex-grow: 10;
  height: 100vh;
  /*anything that grows past the container will scroll instead of squish*/
  overflow-y: scroll;
}

.searchbar {
  display: flex;
  align-items: center;
  border: 1px solid #ccc;
  border-radius: 1.2rem;
  padding-left: 1.6rem;
  transition: border 0.2s;
  max-width: 54rem;
}

.searchbar:focus-within {
  border-color: black;
}

.searchbar svg {
  height: 2.4rem;
  width: 2.4rem;
}
/* here we redefine our search box input so it will make sense when existing in
its parent container */
.searchbar input {
  border: none;
  background: none;
  display: block;
  flex-grow: 10;
  padding: 1.6rem;
}

.searchbar input:focus {
  outline: none;
}

/* Header */
.dashboard__header {
  display: flex;
  justify-content: space-between;
  margin: 4.8rem 0;
  align-items: center;
}

.dashboard__header h1 {
  font-size: 3.6rem;
  font-weight: 300;
}

.dashboard__header h3 {
  font-size: 1.6rem;
  font-weight: 400;
  color: rgb(109, 109, 109);
}

.dashboard__filter {
  display: flex;
  align-items: center;
  background: none;
  border: 1px solid #ccc;
  padding: 1.2rem 2.4rem;
  border-radius: 1.2rem;
  cursor: pointer;
  transition: border 0.2s;
}

.dashboard__filter:hover {
  border-color: black;
}

.dashboard__filter svg {
  height: 2.4rem;
  width: 2.4rem;
}

.dashboard__filter h6 {
  font-size: 1.6rem;
  font-weight: 400;
  margin-right: 1.6rem;
  color: rgb(136, 136, 136);
}

/* Sidebar */
.dashboard__sidebar {
  padding: 4.8rem;
  display: flex;
}

.dashboard__sidebar > div {
  background: black;
  border-radius: 2.4rem;
  padding: 4.8rem;
  color: #fff;
}

.dashboard__sidebar-title {
  font-size: 2.4rem;
  margin-bottom: 2.4rem;
}


/* Icon Style */
.icon {
  --icon-size: 4.8rem;
  --icon-bg: white;
  --icon-color: black;

  height: var(--icon-size); 
  width: var(--icon-size);

  display: flex;
  justify-content: center;
  align-items: center;

  background: var(--icon-bg);
  border-radius: 50%;
  color: var(--icon-color);

}
/* here calc is just like a math function and lets us mix units */
.icon svg {
  height: calc(var(--icon-size) / 2); 
  width: calc(var(--icon-size) / 2);
}

.icon.small {
  --icon-size: 3.6rem;
}

.icon.large {
  --icon-size: 6.4rem;
}

.icon.transparent {
  --icon-bg: rgba(0, 0, 0, .25);
}


/* Stats */
.stats {
  margin-bottom: 2.4rem;
}

.stats > *:not(:last-child) {
  margin-bottom: 2.4rem;
}

.stat {
  display: flex;
  align-items: center;
}

.stat .icon {
  margin-right: 2.4rem;
}

.stat__info h4 {
 font-size: 2.4rem;
}

.stat__info h6 {
  font-size: 1.6rem;
  font-weight: 400;
}

.jumbo-tile {
  display: flex;
  justify-content: space-around;
  padding: 2.4rem;
  border-radius: 2.4rem;
  background-color: rgb(238, 231, 211);
}

.jumbo-tile .icon {
  margin-bottom: 2rem;
}

.jumbo-tile__item h6 {
  font-size: 1.6rem;
  font-weight: 400;
}

.jumbo-tile__item h3 {
  font-size: 3.6rem;
  font-weight: 500;
}

.dashboard__stats-row {
  margin-top: 4.8rem;
  display: flex;
  gap: 4.8rem;
}

.stat-tile {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  background-color: rgb(243, 226, 188);
  padding: 4.8rem;
  flex-grow: 1;
  border-radius: 2.4rem;
}

.stat-tile.green {
  background-color: rgb(135, 224, 135);
}

.stat-tile__info h3 {
  font-size: 2.4rem;
  font-weight: 500;
}

.stat-tile__info h6 {
  font-size: 1.6rem;
  font-weight: 400;
  color: rgb(121, 121, 121);
}

.stat-tile__info h2 {
  font-size: 3.6rem;
  font-weight: 500;
}


.stat-tile__percent {
  height: 10rem;
  width: 10rem;
  border: 8px solid black;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.stat-tile__percent h4 {
  font-size: 2.4rem;
}

.stat-tile__trend {
  position: absolute;
  top: 2.4rem;
  right: 2.4rem;
}

.stat-tile__trend svg {
  height: 3rem;
  width: 3rem;
}
/* here we are just adjusting the orientation of the svg */
.stat-tile__trend.up svg {
  transform: rotate(135deg);
}

.stat-tile__trend.down svg {
  transform: rotate(-135deg);
}